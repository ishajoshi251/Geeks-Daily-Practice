class Solution:

    #Function to find minimum time required to rot all oranges. 
	def orangesRotting(self, grid):
		#Code here
		n = len(grid)
		m = len(grid[0])
		q = []
		fresh = 0 
		vis = [[0 for i in range(m)]for i in range(n)]
		for i in range(n):
		    for j in range(m):
		        if grid[i][j] == 2:
		            q.append([i,j,0])
		            vis[i][j] = 2
		        else:
		            vis[i][j] = 0
		        if grid[i][j] == 1:
		            fresh +=1
		count = 0
		maxi = 0
		drow = [-1,0,1,0]
		dcol=[0,1,0,-1]
		while q:
		    r = q[0][0]
		    c = q[0][1]
		    t = q[0][2]
		    maxi = max(maxi,t)
		    
		    q.pop(0)
		    for i in range(4):
		        nrow = r+drow[i]
		        ncol = c+dcol[i]
		        if nrow>=0 and nrow<n and ncol>=0 and ncol<m and vis[nrow][ncol] != 2 and grid[nrow][ncol] == 1:
		            q.append([nrow,ncol,t+1])
		            vis[nrow][ncol] = 2
		            count += 1
		            
		if count == fresh:
		     return maxi
		else:
		     return -1
