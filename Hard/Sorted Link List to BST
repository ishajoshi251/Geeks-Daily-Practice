'''
#LinkedList Node
class LNode:
    def __init__(self, data):   # data -> value stored in node
        self.data = data
        self.next = None
        
#Tree Node        
class TNode:
    def __init__(self, data):
        self.data=data
        self.left = self.right = None
'''
import math
class Solution:
    def sortedListToBST(self, head):
        #code here
        def converttoarray(head):

            arr=[]

            while head:

                arr.append(head.data)

                head=head.next

            return arr

 

        def arrtoTree(left,right):

            if left>right:return None

            

            mid=math.ceil((left+right)/2)

            root=TNode(arr[mid])

            root.left=arrtoTree(left,mid-1)

            root.right=arrtoTree(mid+1,right)

            return root

 

        arr=converttoarray(head)

        root=arrtoTree(0,len(arr)-1)

        return root
